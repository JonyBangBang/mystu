server.port=8100
spring.application.name=zuul-8100
eureka.client.registerWithEureka=true
eureka.client.fetchRegistry=true
eureka.client.serviceurl.defaultZone=http://localhost:8761/eureka/
#配置已经注册到eureka的服务实例名称和拦截地址
#hello-client 服务实例ID
#/hello/** 拦截的URL
#/** 表示拦截所有的URL
#默认是负载均衡算法是轮询
#zuul.routes.hello-client.path=/**
#zuul.routes.hello-client.serviceId=hello-client

zuul.routes.hello-consumer.path=/**
zuul.routes.hello-consumer.serviceId=hello-consumer


spring.redis.host=localhost
spring.redis.port=6379
#全局配置限流
##开启限流
zuul.ratelimit.enabled=true
#key名字
zuul.ratelimit.key-prefix=myLimit
##60s 内请求超过 3 次，服务端就抛出异常，60s 后可以恢复正常请求
#zuul.ratelimit.default-policy.limit=3
#zuul.ratelimit.default-policy.refresh-interval=60
###针对 IP 进行限流，不影响其他 IP
#zuul.ratelimit.default-policy.type=origin

# 局部限流：针对某个服务进行限流
##60s 内请求超过 5 次，服务端就抛出异常，60s 后可以恢复正常请求
zuul.ratelimit.policies.hello-consumer.limit=5
zuul.ratelimit.policies.hello-consumer.refresh-interval=60
###针对某个 IP 进行限流，不影响其他 IP
zuul.ratelimit.policies.hello-consumer.type=origin
##配额,这个默认不配置
#zuul.ratelimit.policies.hello-consumer.quota=1
zuul.ratelimit.repository=REDIS

# Redis服务器连接密码（默认为空）
spring.redis.password=
# 连接池最大连接数（使用负值表示没有限制）
spring.redis.jedis.pool.max-active=8
# 连接池最大阻塞等待时间（使用负值表示没有限制）
spring.redis.jedis.pool.max-wait=-1ms
# 连接池中的最大空闲连接
spring.redis.jedis.pool.max-idle=8  
# 连接池中的最小空闲连接
spring.redis.jedis.pool.min-idle=0  
# 连接超时时间（毫秒）
spring.redis.timeout=1000ms
